#参考链接：https://mp.weixin.qq.com/s/eQOMt3dz1P2JwezDaoZGzg

# 在 master 节点和 worker 节点都要执行
# 最后一个参数 1.18.5 用于指定 kubenetes 版本，支持所有 1.18.x 版本的安装
 sh install_kubelet.sh 1.18.5

# 只在 master 节点执行
# 替换 x.x.x.x 为 master 节点实际 IP（请使用内网 IP）
# export 命令只在当前 shell 会话中有效，开启新的 shell 窗口后，如果要继续安装过程，请重新执行此处的 export 命令
export MASTER_IP=x.x.x.x
# 替换 apiserver.demo 为 您想要的 dnsName
export APISERVER_NAME=apiserver.7d.com
# Kubernetes 容器组所在的网段，该网段安装完成后，由 kubernetes 创建，事先并不存在于您的物理网络中
export POD_SUBNET=10.100.0.1/16
echo "${MASTER_IP}    ${APISERVER_NAME}" >> /etc/hosts



# 初始化 master 节点
#
# 执行master初始化脚本
sh init_master.sh  1.18.5

# 检查master初始化结果
# 只在 master 节点执行

# 执行如下命令，等待 3-10 分钟，直到所有的容器组处于 Running 状态
watch kubectl get pod -n kube-system -o wide

# 查看 master 节点初始化结果
kubectl get nodes -o wide



# 初始化 worker 节点
#
# 获得 join 命令参数，只在 master 节点执行，该 token 的有效时间为 2 个小时，2 小时内，您可以使用此 token 初始化任意数量的 worker 节点。
kubeadm token create --print-join-command


# 初始化 worker,针对所有的 worker 节点执行
#
# 只在 worker 节点执行
# 替换 x.x.x.x 为 master 节点的内网 IP
export MASTER_IP=x.x.x.x
# 替换 apiserver.demo 为初始化 master 节点时所使用的 APISERVER_NAME
export APISERVER_NAME=apiserver.7d.com
echo "${MASTER_IP}    ${APISERVER_NAME}" >> /etc/hosts

# 替换为 master 节点上 kubeadm token create 命令的输出
kubeadm join apiserver.7d.com:6443 --token f7uewc.h0z9b3e5gxzij9hl     --discovery-token-ca-cert-hash sha256:829e2813e91fe228afb7273c33dd7ad4f643a94b5635da56d097cd9399833662

# 检查初始化结果
# 在 master 节点执行
kubectl get nodes -o wide


